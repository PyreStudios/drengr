"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[788],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return r?a.createElement(f,s(s({ref:t},l),{},{components:r})):a.createElement(f,s({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:n,s[1]=u;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4652:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=r(3117),n=(r(7294),r(3905));const o={sidebar_position:1},s="Requests",u={unversionedId:"router/requests",id:"router/requests",title:"Requests",description:"Steward handles incoming HTTP requests by mapping them to a Request class.",source:"@site/docs/router/requests.md",sourceDirName:"router",slug:"/router/requests",permalink:"/steward/docs/router/requests",draft:!1,editUrl:"https://github.com/pyrestudios/steward/tree/main/docs/router/requests.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Installation and Requirements",permalink:"/steward/docs/quickstart/installation-and-requirements"},next:{title:"Responses",permalink:"/steward/docs/router/responses"}},i={},p=[{value:"Getting Values for Path Parameters",id:"getting-values-for-path-parameters",level:3}],l={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"requests"},"Requests"),(0,n.kt)("p",null,"Steward handles incoming HTTP requests by mapping them to a Request class.\nThis class functions as a wrapper of the HTTPRequest from 'dart:io', but also adds additional properties that are used by the Steward framework (and exposes a few extra properties for you to leverage, too!)."),(0,n.kt)("p",null,"Most of the time, you won't need to new up a request directly as you'll let Steward handle that for you, however, you may want to instantiate requests when writing tests (and this is completely supported)."),(0,n.kt)("h3",{id:"getting-values-for-path-parameters"},"Getting Values for Path Parameters"),(0,n.kt)("p",null,"When Steward's Router processes a request, it will parse and attach certain metadata from the request for each of access. Namely, you can pull path parameters out of a request object. We'll talk more about how these get ",(0,n.kt)("em",{parentName:"p"},"into")," a request object when we cover the router, but for now, just know that you can retrieve path parameters from a request by access the ",(0,n.kt)("inlineCode",{parentName:"p"},"pathParams")," property on that request."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"Request myRequest = getARequestFromSomewhere();\nprint(myRequest.pathParams);\n")))}c.isMDXComponent=!0}}]);